<!DOCTYPE html>
<html lang="en">
<!-- This Layout (/dash/layout1.erb) is used by Seeker side-->

<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <title>JORB</title>
  <link href="_/css/styles.css" rel="stylesheet"></link> 
  <link href="_/css/jqueryfileupload/jquery.fileupload.css" rel="stylesheet"> </link> 
  <link href="_/css/select2/select2.css" rel="stylesheet" type="text/css"></link>  
  <link href="_/css/x-editable/bootstrap-editable.css" rel="stylesheet" type="text/css"></link>  
  <link href="_/css/x-editable/bootstrap-wysihtml5-0.0.2.css" rel="stylesheet" type="text/css"></link> 
  <link href="_/css/date-time/daterangepicker.css" rel="stylesheet" type="text/css"></link> 
  <link href="_/css/spinners/dots.css" rel="stylesheet" type="text/css"></link> 
  <link rel="shortcut icon" type="image/x-icon" href="favicon.ico" />
  
  <!--JQuery--> 
  <script src="_/js/jquery/jquery.min.js" type="text/javascript" ></script> 
  <script src="_/js/jquery/jquery-ui.min.js" type="text/javascript" ></script> 
  <script>
    $(window).load(function(){
      $('#preloader').fadeOut(100, function() {
                 $('body').css('overflow','auto');
                 $(this).remove();
      });
    });
  </script>
</head>

<body>
  <header>
    <div class="hero">
      <section class="layout">
        <div class="branding">
          <a href="http://www.jorb.co">
            <img src="images/JORB-logo-dark-200.png" alt="Jorb.co">
          </a>
        </div> <!-- branding -->
      </section> <!-- layout -->
    </div> <!-- hero -->
    <div class="navigation">
      <section class="layout">
        <ul class="nav">
          <li><a href="/edge"><i class="fa fa-home"></i>Home</a></li>
          <li><a href="/profile"><i class="fa fa-question"></i>Personal Profile</a></li>
          <li><a href="/mycv"><i class="fa fa-user"></i>Online CV</a></li>
          <li><a href="/settings"><i class="fa fa-heart"></i>Career Profile</a></li>
          <li><a href="/logout"><i class="fa fa-keyboard-o"></i>Sign out</a></li>    
        </ul> <!-- nav -->
      </section> <!-- layout -->
    </div> <!-- navigation -->
  </header><!-- header -->

<div id="preloader"> 
  <div id="spinner_container"> 
    <div id="spinner" class="dots">    Loading... </div>
  </div>
</div>

<%= yield %> 

<script src="_/js/bootstrap/bootstrap.min.js" type="text/javascript"></script> 
<script src="_/js/x-editable/bootstrap-editable.min.js" type="text/javascript" ></script> 
<script src="_/js/x-editable/wysihtml5/bootstrap-wysihtml5-0.0.2/wysihtml5-0.3.0.js" type="text/javascript" ></script>
<script src="_/js/x-editable/wysihtml5/bootstrap-wysihtml5-0.0.2/bootstrap-wysihtml5-0.0.2.js" type="text/javascript"></script> 
<script src="_/js/x-editable/wysihtml5/wysihtml5.js" type="text/javascript" ></script>
<script src="_/js/x-editable/select2.js" type="text/javascript" ></script> 
<script src="_/js/x-editable/address.js" type="text/javascript"></script> 
<script src="_/js/date-time/moment.min.js" type="text/javascript"></script>
<script src="_/js/date-time/daterangepicker.js" type="text/javascript"></script>
<script src="_/js/datatables/jquery.dataTables.min.js" type="text/javascript" ></script> 
<script src="_/js/datatables/jquery.dataTables-bootstrap.js" type="text/javascript" ></script> 



<script>
  $(function(){
    $('input[name="date-range-picker-edu"]').daterangepicker({
    timePicker: false,
    showDropdowns: true,
    format: 'DD/MM/YYYY',
    }, function(start, end, label) {
      console.log(moment(start.format('YYYY-MM-DDTHH:mm:ss') + 'Z').utc().toISOString());
      from = moment(start.format('YYYY-MM-DDTHH:mm:ss') + 'Z').utc().toISOString();
      end =moment(end.format('YYYY-MM-DDTHH:mm:ss') + 'Z').utc().toISOString();
       $.ajax({
          url: '/update_inSG_Date',
          type: 'POST',
          data: {"insg_start": from, "insg_end": end, "pk" : <%=@userprofile.id %>},
          beforeSend : function(){
            $("#saving_date").html("<div id='saver'><i class='fa fa-spinner fa-spin'></i></div>");
          }, 
          success: function(response){
                      // newAlert("#alert_placeholder-tab", 'success', "Dates recorded");
                       $('#saver').fadeOut(1000, function() {
                        $(this).remove();
                       });
                    }
        });
    }); //date-range-picker-edu

    /* This is in the Add Skill Modal*/
      $('#skillcat').editable({
        source: "/getskillcat" ,
        onblur: 'submit',
        showbuttons: false,
        success: function(response, newValue) {

                 $.getJSON("/getskill", {"value": newValue}, function (result) {
                  $('#skillname').editable('option', 'source', result);   //somehow, all these 3 sentences must be in here.
                  $('#skillname').editable('setValue', null);             //else it will fail.
                  $('#skillname').editable('option', 'disabled', false);  //             
                  }).fail( function(d, textStatus, error) {
                      console.error("Error code: " + textStatus + ", error: "+error)

                  });
        }
      });

      $('#skillname').editable({
        disabled: true,
        onblur: 'submit',
        showbuttons: false,
        success: function(response, newValue)
        {
          $('#skillrank').editable('option', 'disabled', false);
        }
        });

      $('#skillrank').editable(
        {
        disabled: true,
        onblur: 'submit',
        showbuttons: false});

      //init editables
      // $('.newskill').editable('option', 'validate', function(v) {
      //     if(!v) return 'This is a required field!';
      // });

    /* This is in the Add Language Modal*/
      $('#lang').editable({
        source: "/getlanguage",
        onblur: 'submit',
        showbuttons: false,
        success: function(response, newValue) {
           $('#speakskill').editable('option', 'disabled', false);
          
        }
      });

      $('#speakskill').editable({
        disabled: true,
        onblur: 'submit',
        showbuttons: false,
        success: function(response, newValue)
        {
          $('#writeskill').editable('option', 'disabled', false);
        }
        });

      $('#writeskill').editable(
        {
        disabled: true,
        onblur: 'submit',
        showbuttons: false});

      //init editables
      // $('.newlang').editable('option', 'validate', function(v) {
      //     if(!v) return 'This is a required field!';
      // });

    /* This is in the Add Education Modal */
      $('#skr_unititle').editable({
        source: "/getdegree",
        onblur: 'submit',
        showbuttons: false,
        success: function(response, newValue) {
           $('#job_edu_specialty').editable('option', 'disabled', false);
           if (newValue ==1 || newValue == 2 || newValue ==3) {
              $('#skr_honours').editable('option', 'disabled', true);
              $('#skr_specialty').editable('option', 'disabled', true);
              $('#skr_university').editable('option', 'disabled', true);
           }else {
            $('#skr_honours').editable('option', 'disabled', false);
            $('#skr_specialty').editable('option', 'disabled', false);
            $('#skr_university').editable('option', 'disabled', false);
           }
        }
      });

      $('#skr_specialty').editable({
        source: "/getspecialty",
        disabled: false,
        onblur: 'submit',
        showbuttons: false,
        success: function(response, newValue)
        {

        } //success
        });

      $('#skr_honours').editable(
        {
          source: "/gethonors",
        disabled: false,
        onblur: 'submit',
        showbuttons: false,
        success: function(response, newValue)
        {
          $('#job_edu_pref').editable('option', 'disabled', false);
        }

        });

      $('#skr_university').editable(
        {
          source: "/getuni",
        disabled: false,
        onblur: 'submit',
        showbuttons: false});

      $('#skr_unistart').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',  
        onblur: 'submit',
        showbuttons: false,  
        datepicker: {
                weekStart: 1
           }
        });

      $('#skr_uniend').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',
        onblur: 'submit',
        showbuttons: false,    
        datepicker: {
                weekStart: 1
           }
        });      


    /* This is in the Add Certification Modal */

      $('#skr_certtitle').editable({
        source: "/getcert",
        onblur: 'submit',
        showbuttons: false,
      });

      $('#skr_certlicense').editable();


      $('#skr_certexpiry').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',  
        onblur: 'submit',
        showbuttons: true,  
        datepicker: {
                weekStart: 1
           }
        });

      $('#skr_datecertified').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',
        onblur: 'submit',
        showbuttons: false,    
        datepicker: {
                weekStart: 1
           }
        });

    /* This is in the Add Experience Modal  START*/

      $('#skr_emp_company').editable({
        disabled: false,
        showbuttons: true,
        });

      $('#skr_emp_industry').editable({
        source: "/getind",
        disabled: false,
        onblur: 'submit',
        showbuttons: false,
        });

      $('#skr_emp_location').editable({
        source: "/getcountries",
        disabled: false,
        onblur: 'submit',
        showbuttons: false,
        });

      $('#skr_emp_function').editable({
        source: "/getfunction",
        disabled: false,
        onblur: 'submit',
        showbuttons: false,
        });

      $('#skr_emp_title').editable({
        source: "/getjobtitle",
        disabled: false,
        onblur: 'submit',
        showbuttons: false,
        });

      $('#skr_emp_actualtitle').editable();

      $('#skr_emp_desc').editable({
        emptytext: '--',
        validate: function(value){
          if(value.length >50000 ) {
            return 'You can only enter a maximum of 50000 characters'; 
          }
        }
      });

      $('#skr_emp_start').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',  
        onblur: 'submit',
        showbuttons: false,  
        datepicker: {
          weekStart: 1
        }
        });

      $('#skr_emp_end').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',
        onblur: 'submit',
        showbuttons: false,    
        datepicker: {
          weekStart: 1
        }
      });      
      
    /* This is in the Edit Certification Modal */

      $('#e_skr_certtitle').editable({
        source: "/getcert",
        onblur: 'submit',
        showbuttons: false,
      
      });

      $('#e_skr_certlicense').editable();


      $('#e_skr_certexpiry').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',  
        onblur: 'submit',
        showbuttons: true,  
        datepicker: {
                weekStart: 1
           }
        });

      $('#e_skr_datecertified').editable({
        format: 'dd-mm-yyyy',    
        viewformat: 'dd/mm/yyyy',
        onblur: 'submit',
        showbuttons: false,    
        datepicker: {
                weekStart: 1
           }
        });
  }); /* $(function(){ */

  $('#saveskill-btn').click(function() {
    $('.newskill').editable('submit', {
      url: '/newskill',
      data: {"pk" : <%=@user.id%>},
      ajaxOptions: {
         dataType: 'json' //assuming json response
      },        
      success: function(data, config) {
        if(data && data.errors){
          newAlert("#alert_placeholder-inmodal",'danger', data.errors);
        } //if
        else {
          newAlert("#alert_placeholder-inmodal",'success', data.responsemsg);
          $('.newskill').editable('setValue', null);  //clear values
          $('#skillname').editable('option', 'disabled', true);
          $('#skillrank').editable('option', 'disabled', true);
          $("#skillTable").load("/table",{i: new Date().getTime()}); 
         } //else   
      }, //success
      error: function(errors) {
        var msg = '';
        if(errors && errors.responseText) { //ajax error, errors = xhr object
          msg = errors.responseText;
        } //if
        else { 
          $.each(errors, function(k, v) {
            if (k=="skillcatid") {k = "Skill Category"};
            if (k=="skillid") {k = "Skill name"};
            if (k=="skillrank") {k = "Skill rank"};      
            msg += k+": "+v+"<br>";
          }); //each
          newAlert("#alert_placeholder-inmodal",'danger', msg); 
        } //else
      } //error
    }); //newskill
  }); //saveskill-btn

  $('#closeskill-btn').click(function() {
    $('.newskill').editable('setValue', null)  //clear values
      .editable('option', 'pk', null)          //clear pk
      .removeClass('editable-unsaved');        //remove bold css
  });

  $('#savelanguage-btn').click(function() {
    $('.newlang').editable('submit', {
      url: '/newlanguage',
      data: {"pk" : <%=@user.id%>},
      ajaxOptions: {
         dataType: 'json' //assuming json response
      },        
      success: function(data, config) {
        if(data && data.errors){
           newAlert("#alert_placeholder-inmodal2",'danger', data.errors);
        } //if   
        else {
          newAlert("#alert_placeholder-inmodal2",'success', 'New Language added!');
          $('.newlang').editable('setValue', null);  //clear values
          $('#speakskill').editable('option', 'disabled', true);
          $('#writeskill').editable('option', 'disabled', true);
          $("#languageTable").load("/langtable",{i: new Date().getTime(), pk: <%=@userprofile.id%>});  
        } //else    
      }, //success
      error: function(errors) {
        var msg = '';
        if(errors && errors.responseText) { //ajax error, errors = xhr object
          msg = errors.responseText;
        } else { //validation error (client-side or server-side)
          $.each(errors, function(k, v) {
            if (k=="skr_lang") {k = "Language"};
            if (k=="skr_lang_speakskill") {k = "Spoken skill level"};
            if (k=="skr_lang_writeskill") {k = "Written skill level"};      
            msg += k+": "+v+"<br>";
          }); //each
          newAlert("#alert_placeholder-inmodal2",'danger', msg);   
         } //else
      } //error
    }); //newlang
  }); //savelanguage-btn

  $('#closelanguage-btn').click(function() {
    $('.newlang').editable('setValue', null)  //clear values
      .editable('option', 'pk', null)          //clear pk
      .removeClass('editable-unsaved');        //remove bold css
  });



      $('#saveedu-btn').click(function() {
         $('.newedu').editable('submit', {
             url: '/newedu',
             data: {"pk" : <%=@user.id%>},
             ajaxOptions: {
                 dataType: 'json' //assuming json response
             },       
             success: function(data, config) {
             
                  if(data && data.errors){
                       //server-side validation error, response like {"errors": {"username": "username already exist"} }
                       // config.error.call(this, data.errors);
                       newAlert("#alert_placeholder-inmodal3",'danger', data.errors);

                 }   else{

                      newAlert("#alert_placeholder-inmodal3",'success', 'New Education Requirement Added!');

                      $('.newedu').editable('setValue', null);  //clear values
                      $('#specialty').editable('option', 'disabled', true);
                      $('#honors').editable('option', 'disabled', true);
                      // $("#lt").load("/langtable");
                      $("#educationTable").load("/edutable",{i: new Date().getTime(), pk: <%=@userprofile.id%>}); 
                 }   
             },
             error: function(errors) {
                 var msg = '';
                 if(errors && errors.responseText) { //ajax error, errors = xhr object
                     msg = errors.responseText;
                     //We do not have any response text from backend at the moment
                 } else { //validation error (client-side or server-side)
                     $.each(errors, function(k, v) {
                      if (k=="job_edu_title") {k = "Education title"};
                      if (k=="job_edu_specialty") {k = "Specialty"};
                      if (k=="job_edu_honors") {k = "Honors"};   
                      if (k=="job_edu_pref") {k = "Preference level"};     
                      msg += k+": "+v+"<br>";
                    });
                     newAlert("#alert_placeholder-inmodal3",'danger', msg);
                  
                 }
              
             }
         });
      });

      $('#closeedu-btn').click(function() {
          $('.newedu').editable('setValue', null)  //clear values
              .editable('option', 'pk', null)          //clear pk
              .removeClass('editable-unsaved');        //remove bold css

      });

      

      $('#savecert-btn').click(function() {
         $('.newcert').editable('submit', {
             url: '/newcert',
             data: {"pk" : <%=@user.id%>},
             ajaxOptions: {
                 dataType: 'json' //assuming json response
             },       
             success: function(data, config) {
             
                  if(data && data.errors){
                       //server-side validation error, response like {"errors": {"username": "username already exist"} }
                       // config.error.call(this, data.errors);
                       newAlert("#alert_placeholder-inmodal4",'danger', data.errors);

                 }   else{

                      newAlert("#alert_placeholder-inmodal4",'success', 'New Certification Requirement Added!');

                      $('.newcert').editable('setValue', null);  //clear values
                      $("#certificationTable").load("/certtable",{i: new Date().getTime(), pk: <%=@userprofile.id%>}); 
                 }   
             },
             error: function(errors) {
                 var msg = '';
                 if(errors && errors.responseText) { //ajax error, errors = xhr object
                     msg = errors.responseText;
                     //We do not have any response text from backend at the moment
                 } else { //validation error (client-side or server-side)
                     $.each(errors, function(k, v) {
                      if (k=="skr_certtitle") {k = "Certificate name"};
                      if (k=="skr_datecertified") {k = "Date of Certification"};     
                      if (k=="skr_certexpiry") {k = "Expiry Date of Certification"};    
                      if (k=="skr_certlicense") {k = "Certificate license #"};
                      msg += k+": "+v+"<br>";
                    });
                     newAlert("#alert_placeholder-inmodal4",'danger', msg);
                  
                 }
              
             }
         });
      });

      $('#closecert-btn').click(function() {
          $('.newcert').editable('setValue', null)  //clear values
              .editable('option', 'pk', null)          //clear pk
              .removeClass('editable-unsaved');        //remove bold css

      });

      $('#saveexperience-btn').click(function() {
         $('.newjob').editable('submit', {
             url: '/newexperience',
             data: {"pk" : <%=@user.id%>},
             ajaxOptions: {
                 dataType: 'json' //assuming json response
             },       
             success: function(data, config) {
             
                  if(data && data.errors){
                       //server-side validation error, response like {"errors": {"username": "username already exist"} }
                       // config.error.call(this, data.errors);
                       newAlert("#alert_placeholder-inmodal5",'danger', data.errors);

                 }   else{

                      newAlert("#alert_placeholder-inmodal5",'success', 'Experience Added!');

                      $('.newjob').editable('setValue', null);  //clear values
                      $("#experienceTable").load("/experiencetable",{i: new Date().getTime(), pk: <%=@user.id%>}); 
                      // $('#addexperiencemodal').modal("hide");
                 }   
             },
             error: function(errors) {
                 var msg = '';
                 if(errors && errors.responseText) { //ajax error, errors = xhr object
                     msg = errors.responseText;
                     //We do not have any response text from backend at the moment
                 } else { //validation error (client-side or server-side)
                     $.each(errors, function(k, v) {
                      if (k=="skr_emp_company") {k = "Company Name"};
                      if (k=="skr_emp_industry") {k = "Industry"};
                      if (k=="skr_emp_start") {k = "Start Date"};   
                      if (k=="skr_emp_end") {k = "End Date"};    
                      if (k=="skr_emp_location") {k = "Location"};
                      if (k=="skr_emp_function") {k = "Function"};
                      if (k=="skr_emp_title") {k = "Job Title"};   
                      if (k=="skr_emp_actualtitle") {k = "Actual Title"};      
                      if (k=="skr_emp_desc") {k = "JobDescription"}; 
                      msg += k+": "+v+"<br>";
                    });
                     newAlert("#alert_placeholder-inmodal5",'danger', msg);
                  
                 }
              
             }
         });
      });


      $('#saveexperience-btn2').click(function() {  // for Edit Experience Modal
         $('.editjob').editable('submit', {
             url: '/editexperience',   
             data: {"pk" : <%=@user.id%>},
             ajaxOptions: {
                 dataType: 'json' //assuming json response
             },       
             success: function(data, config) {
             
                  if(data && data.errors){
                       //server-side validation error, response like {"errors": {"username": "username already exist"} }
                       // config.error.call(this, data.errors);
                       newAlert("#alert_placeholder-inmodal6",'danger', data.errors);

                 }   else{

                      newAlert("#alert_placeholder-inmodal6",'success', 'Expeience Added!');

                      $('.editjob').editable('setValue', null);  //clear values
                      $("#experienceTable").load("/experiencetable",{i: new Date().getTime(), pk: <%=@userprofile.id%>}); 
                      $('#editexperiencemodal').modal("hide");
                 }   
             },
             error: function(errors) {
                 var msg = '';
                 if(errors && errors.responseText) { //ajax error, errors = xhr object
                     msg = errors.responseText;
                     //We do not have any response text from backend at the moment
                 } else { //validation error (client-side or server-side)
                     $.each(errors, function(k, v) {
                      if (k=="skr_emp_company") {k = "Company Name"};
                      if (k=="skr_emp_industry") {k = "Industry"};
                      if (k=="skr_emp_start") {k = "Start Date"};   
                      if (k=="skr_emp_end") {k = "End Date"};    
                      if (k=="skr_emp_location") {k = "Location"};
                      if (k=="skr_emp_function") {k = "Function"};
                      if (k=="skr_emp_title") {k = "Job Title"};   
                      if (k=="skr_emp_actualtitle") {k = "Actual Title"};      
                      if (k=="skr_emp_desc") {k = "JobDescription"}; 
                      msg += k+": "+v+"<br>";
                    });
                     newAlert("#alert_placeholder-inmodal6",'danger', msg);
                  
                 }
              
             }
         });
      });
      $('#closeedu-btn').click(function() {
          $('.newedu').editable('setValue', null)  //clear values
              .editable('option', 'pk', null)          //clear pk
              .removeClass('editable-unsaved');        //remove bold css

      });

      //triggered when modal is about to be shown
      $('#editexperiencemodal').on('shown.bs.modal', function(e) {

          //get data-id attribute of the clicked element
          var jobid = $(e.relatedTarget).data('jobid');
          $("#editexpbody").load("/getexperience",  {"pk": jobid});
      });

       $("#currentjobcheck").on('change', function(){
          if($(this).is(":checked")) {
            $('#skr_emp_currentjob').editable('setValue',"true");
            document.getElementById( 'enddate_block' ).style.visibility = 'hidden'; 
          } else
          {
            $('#skr_emp_currentjob').editable('setValue',"false");
            document.getElementById( 'enddate_block' ).style.visibility = 'visible'; 
          }; 
      });  
</script>
</body>


</html>     